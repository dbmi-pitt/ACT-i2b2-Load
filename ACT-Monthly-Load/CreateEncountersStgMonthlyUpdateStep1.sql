-- TABLE LINKAGE IS FASTER WITH THESE INDEXES
-- MAY NOT EXIST IN THE NEW NEPTUNE_PITT@NEPTUNE_READ BUT READ ONLY ACCESS NOW
-- DEAL WITH IT
--CREATE INDEX IDX_VISIT_SRC ON NEPTUNE_PITT.VISIT_STG(SOURCE_ID);
--CREATE INDEX IDX_VISIT_VIS ON NEPTUNE_PITT.VISIT_STG(VISIT_ID);
--CREATE INDEX IDX_START_VIS ON NEPTUNE_PITT.VISIT_STG(START_DATE);
--CREATE INDEX IDX_VISIT_SRC_STARTDT ON NEPTUNE_PITT.VISIT_STG(SOURCE_ID, START_DATE);

--CREATE INDEX IDX_MARS_ENDT_RSRCH_DTS ON MARS_ENCOUNTERS_W_ENDDT(RESEARCH_ID, START_DATE, END_DATE);
--CREATE INDEX IDX_MARS_NODT_RSRCH_DTS ON MARS_ENCOUNTERS_NO_ENDDT(RESEARCH_ID, START_DATE, END_DATE);

--PREP --> USE NEPTUNE_PITT STAGING TABLES NOW _STG
/*
CREATE TABLE VISIT_STG17 AS 
SELECT * FROM VISIT
WHERE START_DATE >= '01-MAY-17';

CREATE TABLE DIAGNOSIS_MARS_STG17 AS
SELECT * FROM DIAGNOSIS
WHERE SOURCE_ID = 'MARS'
AND DX_FROM_DATE >= '01-MAY-17';

CREATE TABLE DIAGNOSIS_EPIC_STG17 AS
SELECT * FROM DIAGNOSIS
WHERE SOURCE_ID = 'EPIC'
AND DX_FROM_DATE >= '01-MAY-17';


CREATE TABLE PROCEDURES_MARS_STG17 AS
SELECT * FROM PROCEDURES
WHERE SOURCE_ID = 'MARS'
AND PROC_DATE >= '01-MAY-17';

CREATE TABLE PROCEDURES_EPIC_STG17 AS
SELECT * FROM PROCEDURES
WHERE SOURCE_ID = 'EPIC'
AND PROC_DATE >= '01-MAY-17';


CREATE TABLE MED_DISP_MARS_STG17 AS
SELECT * FROM MED_DISPENSE
WHERE SOURCE_ID = 'MARS'
AND DISPENSE_DATE >= '01-MAY-17';

CREATE TABLE MED_ORDER_EPIC_STG17 AS
SELECT * FROM MED_ORDER
WHERE SOURCE_ID = 'EPIC'
AND ORDER_DATE >= '01-MAY-17';

*/
-- BACK UP PREVIOUS MONTHS TABLES - ONCE NEPTUNE IS STABLE AND EVERYTHING MAPPED
-- DON'T NEED TO KEEP THESE COPIES
define prev_month = 'SEP17';
define curr_month = 'OCT17';
define curr_start_date = '''01-OCT-17''';

RENAME FIRST_PT_DEM_STG TO FIRST_PT_DEM_&prev_month;
RENAME FIRST_PATIENT_VISIT_STG TO FIRST_PATIENT_VISIT_&prev_month;
RENAME MARS_ENC_NO_ENDDT_STG TO MARS_ENC_NO_ENDDT_&prev_month;
RENAME MARS_ENC_W_ENDDT_STG TO MARS_ENC_W_ENDDT_&prev_month;
RENAME EPIC_ENC_IN_MARS_VIS_STG TO EPIC_ENC_IN_MARS_VIS_&prev_month;
RENAME EPIC_ENC_EQ_MARS_VIS_STG TO EPIC_ENC_EQ_MARS_VIS_&prev_month;
RENAME EPIC_ENC_ONLY_VIS_STG TO EPIC_ENC_ONLY_VISIT_&prev_month;
RENAME ACT_PATIENT_DEM_DIST_STG TO ACT_PATIENT_DEM_DIST_&prev_month;
RENAME ACT_PATIENT_DEM_COMPLETE_STG TO ACT_PATIENT_DEM_COMPLETE_&prev_month;
RENAME EPIC_ENC_ALL_VIS_STG TO EPIC_ENC_ALL_VIS_&prev_month;
COMMIT;

--TEMP INPATIENT AND ER VISITS FROM MARS
CREATE TABLE ACTS_ETL.MARS_ENC_W_ENDDT_STG AS
SELECT
    SOURCE_ID,
    PERSON_ID AS RESEARCH_ID,
    VISIT_ID,
    CAST( NULL AS VARCHAR2(20) ) AS ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1,
    DIED_OR_IND
FROM
    NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ
WHERE
    SOURCE_ID = 'MARS'
    AND END_DATE IS NOT NULL;

--TEMP OUTPATIENTS FROM MARS
CREATE TABLE ACTS_ETL.MARS_ENC_NO_ENDDT_STG AS
SELECT
    SOURCE_ID,
    PERSON_ID AS RESEARCH_ID,
    VISIT_ID,
    CAST( NULL AS VARCHAR2(20) ) AS ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1, 
    DIED_OR_IND 
FROM
    NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ
WHERE
    SOURCE_ID = 'MARS'
    AND END_DATE IS NULL;
    
CREATE TABLE ACTS_ETL.EPIC_ENC_ALL_VIS_STG AS
SELECT
    SOURCE_ID,
    PERSON_ID AS RESEARCH_ID,
    CAST( NULL AS VARCHAR2(20) ) AS VISIT_ID,
    VISIT_ID AS ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1,
    DIED_OR_IND
FROM
    NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ
WHERE
    SOURCE_ID = 'EPIC';

COMMIT;


-- QUICK VISIT COUNT CHECK
SELECT MIN(START_DATE) FROM NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ; --702944 DISTINCT PATIENTS
SELECT COUNT(DISTINCT VISIT_ID) FROM NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ; --702944 DISTINCT PATIENTS/ 3218338 VISITS
SELECT START_DATE, COUNT(*) FROM NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ 
GROUP BY START_DATE 
ORDER BY START_DATE; --702944 DISTINCT PATIENTS/ 3218338 VISITS 

--DROP TABLE EPIC_ENC_OVERLAP_MARS_DIS;
--LINK INPATIENT/ER VISITS FROM DIFFERENT SOURCES
--THIS COULD GET BETTER ONCE LOC/PROV/FAC are completely mapped
CREATE INDEX TMP_VISIT_PERSON_START_DT_STG ON VISIT_STG(PERSON_ID, START_DATE);
CREATE INDEX TMP_VISIT_PERSON_START_DT_STG ON VISIT_STG(SOURCE_ID);

--Review the data
SELECT * FROM NEPTUNE_PITT.PATIENT_DEMOGRAPHIC_GOLD@NEPTUNE_READ WHERE LAST_ENCOUNTER_DATE BETWEEN () AND LOAD_DATE ; 
SELECT DISTINCT LOAD_DATE FROM NEPTUNE_PITT.PATIENT_DEMOGRAPHIC_GOLD@NEPTUNE_READ ORDER BY LOAD_DATE;-- WHERE LAST_ENCOUNTER_DATE BETWEEN () AND LOAD_DATE ; 
SELECT * FROM NEPTUNE_PITT.PATIENT_DEMOGRAPHIC_GOLD@NEPTUNE_READ WHERE LOAD_DATE >= '01-NOV-17';-- WHERE LAST_ENCOUNTER_DATE BETWEEN () AND LOAD_DATE ; 
SELECT COUNT(DISTINCT PERSON_ID) FROM NEPTUNE_PITT.PATIENT_DEMOGRAPHIC_GOLD@NEPTUNE_READ WHERE LAST_ENCOUNTER_DATE >= '01-SEP-17';-- WHERE LAST_ENCOUNTER_DATE BETWEEN () AND LOAD_DATE ; 
SELECT COUNT(*) FROM NEPTUNE_PITT.PATIENT_DEMOGRAPHIC_GOLD@NEPTUNE_READ;--634289 WHERE LAST_ENCOUNTER_DATE >= '01-SEP-17';-- WHERE LAST_ENCOUNTER_DATE BETWEEN () AND LOAD_DATE ; 
SELECT COUNT(*) FROM ACT_PATIENT_DEM_DIST_&prev_month; --22859
SELECT COUNT(*) FROM ACT_PAT_GOLD; --3259441
--30355 NEW PATIENTS SO ANNOYING HAVE TO DO THIS DIFFERENTLY EACH TIME


SELECT COUNT(DISTINCT PERSON_ID) FROM VISIT_STG;
SELECT MIN(START_DATE) FROM NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ; --702944 DISTINCT PATIENTS

COMMIT;

SELECT COUNT(*) FROM EPIC_ENC_IN_MARS_VIS_STG3; --3239829
CREATE TABLE ACTS_ETL.EPIC_ENC_IN_MARS_VIS_STG AS
SELECT 
    /*+ PARALLEL(4) */    
    SOURCE_ID,
    PERSON_ID AS RESEARCH_ID,
    VISIT_ID AS ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1,
    DIED_OR_IND,  
    (SELECT VISIT_ID 
      FROM ACTS_ETL.MARS_ENC_W_ENDDT_STG M
      WHERE M.RESEARCH_ID = E.PERSON_ID
        AND E.START_DATE BETWEEN M.START_DATE AND M.END_DATE
        AND ROWNUM < 2) AS VISIT_ID
FROM NEPTUNE_PITT.VISIT_STG@NEPTUNE_READ E
WHERE
    SOURCE_ID = 'EPIC';
COMMIT;

SELECT * FROM EPIC_ENC_IN_MARS_VIS_STG;

SELECT COUNT(*) FROM EPIC_ENC_IN_MARS_VIS_STG
WHERE VISIT_ID IS NULL; --2705647 --JULY 2505780 --AUG 2875207


--VISITS THAT DIDN'T FIT IN INPATIENT VISIT
RENAME EPIC_ENC_AFT_IN_MARS_VIS_STG TO EPIC_ENC_AFT_IN_MARS_VIS_&prev_month;
CREATE TABLE EPIC_ENC_AFT_IN_MARS_VIS_STG AS
SELECT * FROM EPIC_ENC_IN_MARS_VIS_STG WHERE VISIT_ID IS NULL;

DROP INDEX IDX_EPIC_ENC_AFT_STG;
DROP INDEX IDX_EPIC_ENC_AFT_RSRC_DT_STG;
CREATE INDEX IDX_EPIC_ENC_AFT_STG ON ACTS_ETL.EPIC_ENC_AFT_IN_MARS_VIS_STG(START_DATE); --1 MIN
CREATE INDEX IDX_EPIC_ENC_AFT_RSRC_DT_STG ON ACTS_ETL.EPIC_ENC_AFT_IN_MARS_VIS_STG(RESEARCH_ID, START_DATE); --1 MIN


--RENAME EPIC_ENC_IN_MARS_VIS_12A TO EPIC_ENC_EQ_MARS_VIS_12;
CREATE TABLE ACTS_ETL.EPIC_ENC_EQ_MARS_VIS_STG AS -- 2 HOURS
SELECT 
    /*+ PARALLEL(4) */    
    SOURCE_ID,
    RESEARCH_ID,
    ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1,
    DIED_OR_IND,  
    (SELECT VISIT_ID 
      FROM ACTS_ETL.MARS_ENC_NO_ENDDT_STG M
      WHERE M.RESEARCH_ID = E.RESEARCH_ID
        AND E.START_DATE = M.START_DATE
        AND ROWNUM < 2) AS VISIT_ID
FROM ACTS_ETL.EPIC_ENC_AFT_IN_MARS_VIS_STG E;
COMMIT;
SELECT COUNT(*) FROM EPIC_ENC_EQ_MARS_VIS_STG WHERE VISIT_ID IS NOT NULL; --335744 --JULY 294750 --338450 --309733
SELECT * FROM EPIC_ENC_EQ_MARS_VIS_STG WHERE VISIT_ID IS NOT NULL; --335744 --JULY 294750 --338450

SELECT COUNT(*) FROM EPIC_ENC_EQ_MARS_VIS_STG WHERE VISIT_ID IS NULL; --2369903 -JULY 2211030 --AUG 2536757 --SEP 2334092


RENAME EPIC_ENC_AFT_EQ_MARS_STG TO EPIC_ENC_AFT_EQ_MARS_&prev_month;
CREATE TABLE EPIC_ENC_AFT_EQ_MARS_STG AS
SELECT * FROM EPIC_ENC_EQ_MARS_VIS_STG
WHERE VISIT_ID IS NULL;

SELECT COUNT(*) FROM EPIC_ENC_AFT_EQ_MARS_STG WHERE VISIT_ID IS NULL; --2369903 -JULY 2211030 -- AUG 2536757


-- GENERATE SYNTHETIC VISIT IDS

-- PRUNE EPIC VISITS THAT HAVE ALREADY BEEN ACCOUNTED FOR  (EPIC_ENC_AFT_EQ_MARS_STG)
-- ASSIGN VISIT_IDS TO EPIC VISITS THAT HAVE START_DATE = MARS START_DATES
-- CREATE SYNTHETIC VISIT IDS FOR REMAINING EPIC VISITS
-- GENERATE VISIT IDS FOR ALL UNIQUE RESEARCH_ID/DATES
--CREATE SEQUENCE  "ACT_VISIT_SEQ" 
--   MINVALUE -999999999999999999999999999 
--   MAXVALUE -1 
--   INCREMENT BY -1 START WITH -1000000040 
--   CACHE 20 NOORDER  NOCYCLE  NOPARTITION; 
--1080290640

SELECT MIN(VISIT_ID) FROM TMP_SYNTH_VIS_STG; -- JULY -1083415640 -- AUG -1084849597 -SEP 1086485837
DROP INDEX EFT_EQ_MARS_RSRCH_STDT_STG;
CREATE INDEX EFT_EQ_MARS_RSRCH_STDT_STG ON EPIC_ENC_AFT_EQ_MARS_STG( RESEARCH_ID, START_DATE);
RENAME TMP_SYNTH_VIS_STG TO TMP_SYNTH_VIS_&prev_month;
CREATE TABLE TMP_SYNTH_VIS_STG AS --5 MIN
    SELECT  
        /*+ PARALLEL(4) */    
        ACT_VISIT_SEQ.NEXTVAL AS VISIT_ID, 
        RESEARCH_ID,
        START_DATE
        FROM (
        SELECT RESEARCH_ID, START_DATE
        FROM EPIC_ENC_AFT_EQ_MARS_STG 
        GROUP BY RESEARCH_ID, START_DATE);
COMMIT;
SELECT COUNT(*) FROM TMP_SYNTH_VIS_STG; --1,544,315 JUNE 1,580,669 MAY --JULY 1,433,927 -- AUG 1636232 --SEP 1504252
SELECT MAX(START_DATE) FROM TMP_SYNTH_VIS_STG; --31-AUG-17 -30-SEP-17
SELECT MIN(VISIT_ID) FROM TMP_SYNTH_VIS_STG;-- -1083415640 -- JULY -1084849597 -- AUG -1086485837 -SEP -1087990098


--SELECT COUNT(*) FROM EPIC_ENC_ONLY_VIS_12; --16702118
--SELECT COUNT(DISTINCT VISIT_ID) FROM EPIC_ENC_ONLY_VIS_12; --11773986
--SELECT COUNT(DISTINCT RESEARCH_ID) FROM EPIC_ENC_ONLY_VIS_12; --1502863
/*
RENAME MARS_ENCOUNTERS_NO_ENDDT TO MARS_ENC_NO_ENDDT_12;
RENAME MARS_ENC_NO_ENDDT_12 TO MARS_ENC_NO_ENDDT_12_17;

RENAME MARS_ENCOUNTERS_W_ENDDT TO MARS_ENC_W_ENDDT_12;
RENAME MARS_ENC_W_ENDDT_12 TO MARS_ENC_W_ENDDT_12_17;

SELECT COUNT(DISTINCT RESEARCH_ID) FROM MARS_ENC_NO_ENDDT_12_17; --1,546,816 2012-2017
SELECT COUNT(DISTINCT RESEARCH_ID) FROM MARS_ENC_W_ENDDT_12_17; --1,232,765 2012-2017 INPATIENT VISITS
*/

SELECT COUNT(DISTINCT RESEARCH_ID) FROM MARS_ENC_NO_ENDDT_STG; --JUNE 134124, 220956 MAY 2017 --120048 JULY --AUG 132997 --SEP 125033
SELECT COUNT(DISTINCT RESEARCH_ID) FROM MARS_ENC_W_ENDDT_STG; --JUNE 53878 , 98366 MAY 2017 INPATIENT VISITS 51550 JULY -- AUG 51038 --SEP 51201

--MARS_ENC_NO_ENDDT_12_17 + MARS_ENC_W_ENDDT_12_17 + EPIC_ENC_ONLY_VIS_12 = ALL VISITS 2012
DROP INDEX TMP_SYNTH_RSRCH_STDT_STG;
CREATE INDEX TMP_SYNTH_RSRCH_STDT_STG ON TMP_SYNTH_VIS_STG( RESEARCH_ID, START_DATE);

CREATE TABLE EPIC_ENC_ONLY_VIS_STG AS -- 1 MIN TAKING WAY LONGER FORGOT TO CREATE THE INDEXUGGGH
SELECT    
    /*+ PARALLEL(4) */    
    SOURCE_ID,
    RESEARCH_ID,
    ENCOUNTER_ID,
    START_DATE,
    END_DATE,
    DISCHARGE_DISP_CD,
    DISCHARGE_STATUS_CD,
    PROVIDER_ID,
    DEPT_FACILITY_ID,
    ENC_TYPE_CD,
    FIN_CLASS_CD,
    ADMIT_SOURCE_CD,
    HOSPITAL_SERVICE_CD,
    PATIENT_CLASS_CD,
    PATIENT_TYPE_CD,
    DRG_CODE_1,
    DIED_OR_IND,
    (SELECT 
        /*+ PARALLEL(4) */    
        TO_CHAR(VISIT_ID) 
        FROM TMP_SYNTH_VIS_STG B
        WHERE  
            B.RESEARCH_ID = A.RESEARCH_ID
            AND B.START_DATE =  A.START_DATE
            AND ROWNUM < 2) AS VISIT_ID
    FROM EPIC_ENC_AFT_EQ_MARS_STG A;
COMMIT;
SELECT COUNT(*) FROM TMP_SYNTH_VIS_STG; --1,544,315 ( REPRESENTS OUTPT VISIT DATES ) -- JULY 1433927 --AUG 1636232 --SEP 1504252
SELECT COUNT(*) FROM EPIC_ENC_AFT_EQ_MARS_STG; --2,369,903 ( REPRESENTS OUTPATIENT VISIT ENCOUNTERS - TRANSACTIONAL) --JULY 2211030 --AUG 2536757 --2334092


SELECT COUNT(DISTINCT VISIT_ID) FROM EPIC_ENC_ONLY_VIS_STG WHERE VISIT_ID IS NOT NULL; -- JUN 1544315 --JULY  1433927
-- MAY 2,451,443 / 1580669 VISITS -- AUG 1636232 --1504252

SELECT COUNT(*) FROM EPIC_ENC_IN_MARS_VIS_STG WHERE VISIT_ID IS NOT NULL; --386645 / 63384 VISITS SEP 1504252
SELECT COUNT(*) FROM EPIC_ENC_EQ_MARS_VIS_STG WHERE VISIT_ID IS NULL; --335781 / 151305 VISITS SEP 2334092

-- DELETE ENCOUNTERS WITHOUT VISIT IDS - THEY ARE THE ONES THAT ARE NOT IN A IINPATIENT VISIT
-- THIS NEEDS TO BE DONE BETTER
RENAME EPIC_ENC_IN_MARS_VIS_STG TO EPIC_ENC_IN_MARS_VIS_STG_NULL;
CREATE TABLE EPIC_ENC_IN_MARS_VIS_STG 
AS SELECT * FROM EPIC_ENC_IN_MARS_VIS_STG_NULL
WHERE VISIT_ID IS NOT NULL;
COMMIT;
SELECT COUNT(*) FROM EPIC_ENC_IN_MARS_VIS_STG WHERE VISIT_ID IS NOT NULL; --SEP 356240

DROP TABLE EPIC_ENC_IN_MARS_VIS_STG_NULL;
DROP TABLE EPIC_ENC_EQ_MARS_VIS_STG_NULL;

RENAME EPIC_ENC_EQ_MARS_VIS_STG TO EPIC_ENC_EQ_MARS_VIS_STG_NULL;
CREATE TABLE EPIC_ENC_EQ_MARS_VIS_STG
AS SELECT * FROM EPIC_ENC_EQ_MARS_VIS_STG_NULL
WHERE VISIT_ID IS NOT NULL;

SELECT COUNT(*) FROM EPIC_ENC_EQ_MARS_VIS_STG; --335744 --294750 JULY -- AUG 338450 --SEP 309733
COMMIT;

-- DELETE IF NAME HAS AFT OR NAME HAS TMP ???

COMMIT;
